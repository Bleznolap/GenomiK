{
  "hash": "a45ab3571432ced8b81f052b7c3468a4",
  "result": {
    "markdown": "---\ntitle: \"Post With Code\"\nauthor: \"Blessing- The Christian\"\ndate: \"2024-06-08\"\ncategories: [code, analysis]\nimage: \"matx.png\"\n---\n\n\nThis is a post with executable code for building a sparse matrix.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtx <- diag(20) #dense matrix\nmtx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\n [1,]    1    0    0    0    0    0    0    0    0     0     0     0     0\n [2,]    0    1    0    0    0    0    0    0    0     0     0     0     0\n [3,]    0    0    1    0    0    0    0    0    0     0     0     0     0\n [4,]    0    0    0    1    0    0    0    0    0     0     0     0     0\n [5,]    0    0    0    0    1    0    0    0    0     0     0     0     0\n [6,]    0    0    0    0    0    1    0    0    0     0     0     0     0\n [7,]    0    0    0    0    0    0    1    0    0     0     0     0     0\n [8,]    0    0    0    0    0    0    0    1    0     0     0     0     0\n [9,]    0    0    0    0    0    0    0    0    1     0     0     0     0\n[10,]    0    0    0    0    0    0    0    0    0     1     0     0     0\n[11,]    0    0    0    0    0    0    0    0    0     0     1     0     0\n[12,]    0    0    0    0    0    0    0    0    0     0     0     1     0\n[13,]    0    0    0    0    0    0    0    0    0     0     0     0     1\n[14,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n[15,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n[16,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n[17,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n[18,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n[19,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n[20,]    0    0    0    0    0    0    0    0    0     0     0     0     0\n      [,14] [,15] [,16] [,17] [,18] [,19] [,20]\n [1,]     0     0     0     0     0     0     0\n [2,]     0     0     0     0     0     0     0\n [3,]     0     0     0     0     0     0     0\n [4,]     0     0     0     0     0     0     0\n [5,]     0     0     0     0     0     0     0\n [6,]     0     0     0     0     0     0     0\n [7,]     0     0     0     0     0     0     0\n [8,]     0     0     0     0     0     0     0\n [9,]     0     0     0     0     0     0     0\n[10,]     0     0     0     0     0     0     0\n[11,]     0     0     0     0     0     0     0\n[12,]     0     0     0     0     0     0     0\n[13,]     0     0     0     0     0     0     0\n[14,]     1     0     0     0     0     0     0\n[15,]     0     1     0     0     0     0     0\n[16,]     0     0     1     0     0     0     0\n[17,]     0     0     0     1     0     0     0\n[18,]     0     0     0     0     1     0     0\n[19,]     0     0     0     0     0     1     0\n[20,]     0     0     0     0     0     0     1\n```\n\n\n:::\n\n```{.r .cell-code}\nmtxs <- Matrix::Matrix(mtx) #sparse matrix\nmtxs\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n20 x 20 diagonal matrix of class \"ddiMatrix\"\n      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13]\n [1,]    1    .    .    .    .    .    .    .    .     .     .     .     .\n [2,]    .    1    .    .    .    .    .    .    .     .     .     .     .\n [3,]    .    .    1    .    .    .    .    .    .     .     .     .     .\n [4,]    .    .    .    1    .    .    .    .    .     .     .     .     .\n [5,]    .    .    .    .    1    .    .    .    .     .     .     .     .\n [6,]    .    .    .    .    .    1    .    .    .     .     .     .     .\n [7,]    .    .    .    .    .    .    1    .    .     .     .     .     .\n [8,]    .    .    .    .    .    .    .    1    .     .     .     .     .\n [9,]    .    .    .    .    .    .    .    .    1     .     .     .     .\n[10,]    .    .    .    .    .    .    .    .    .     1     .     .     .\n[11,]    .    .    .    .    .    .    .    .    .     .     1     .     .\n[12,]    .    .    .    .    .    .    .    .    .     .     .     1     .\n[13,]    .    .    .    .    .    .    .    .    .     .     .     .     1\n[14,]    .    .    .    .    .    .    .    .    .     .     .     .     .\n[15,]    .    .    .    .    .    .    .    .    .     .     .     .     .\n[16,]    .    .    .    .    .    .    .    .    .     .     .     .     .\n[17,]    .    .    .    .    .    .    .    .    .     .     .     .     .\n[18,]    .    .    .    .    .    .    .    .    .     .     .     .     .\n[19,]    .    .    .    .    .    .    .    .    .     .     .     .     .\n[20,]    .    .    .    .    .    .    .    .    .     .     .     .     .\n      [,14] [,15] [,16] [,17] [,18] [,19] [,20]\n [1,]     .     .     .     .     .     .     .\n [2,]     .     .     .     .     .     .     .\n [3,]     .     .     .     .     .     .     .\n [4,]     .     .     .     .     .     .     .\n [5,]     .     .     .     .     .     .     .\n [6,]     .     .     .     .     .     .     .\n [7,]     .     .     .     .     .     .     .\n [8,]     .     .     .     .     .     .     .\n [9,]     .     .     .     .     .     .     .\n[10,]     .     .     .     .     .     .     .\n[11,]     .     .     .     .     .     .     .\n[12,]     .     .     .     .     .     .     .\n[13,]     .     .     .     .     .     .     .\n[14,]     1     .     .     .     .     .     .\n[15,]     .     1     .     .     .     .     .\n[16,]     .     .     1     .     .     .     .\n[17,]     .     .     .     1     .     .     .\n[18,]     .     .     .     .     1     .     .\n[19,]     .     .     .     .     .     1     .\n[20,]     .     .     .     .     .     .     1\n```\n\n\n:::\n:::\n\n\nSo, if you have a matrix that as zeros on the off-diagonals, it is more computationally efficient to use a sparse matrix instead.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}